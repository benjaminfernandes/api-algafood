spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456

#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update

#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create //Pega os scripts gerados e coloca no arquivo ddl.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

spring.flyway.locations=classpath:db/migration,classpath:db/testdata

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=10000

server.port=8080

#spring.servlet.multipart.max-file-size=20KB
#spring.servlet.multipart.max-request-size=20MB

#Para lançar uma exceção quando uma propriedade desconhecida é informada!
spring.jackson.deserialization.fail-on-unknown-properties=true 
#Para habilitar uma exceção quando a anotação @JsonIgnore estive sendo usada em uma propriedade
spring.jackson.deserialization.fail-on-ignored-properties=true
#habilita lançar a exception NoHandlerFoundException no projeto. Lança se não tiver um código mapeado para a url...
spring.mvc.throw-exception-if-no-handler-found=true
#desabilita o resource handler do spring // desabilita os arquivos staticos da pasta static, pois é uma api e não app web
spring.resources.add-mappings=false

algafood.storage.local.diretorio-fotos=/Users/Equiplano/catalogo

algafood.storage.s3.id-chave-acesso=
algafood.storage.s3.chave-acesso-secreta=
algafood.storage.s3.bucket=algafood-benja
algafood.storage.s3.regiao=us-east-2
algafood.storage.s3.diretorio-fotos=catalogo
#o usuário e senha do s3 estão no Boot DAshboard -> botão direito no projeto -> Open config

#local instancia um bean do service storage local e s3 o storage s3 na amazon
#Adicionar em Override properties
algafood.storage.tipo=local

#Configuração de envio de e-mail
spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
spring.mail.password=

algafood.email.remetente=AlgaFood <naoresponder@algafood.com.br>
algafood.email.impl=fake

algafood.email.sandbox.destinatario=contato@financys.com.br

spring.freemarker.settings.locale=pt_BR

#Aula 19.38
server.compression.enabled=true

#logging.loggly.token=seu_customer_token_aqui
#uri utilizada no resource server para checar o token
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=check123

#visualizar logs de debug
#logging.level.org.springframework=debug

#Encontra a chave publica do certificado que assinou o token - Na aula 23.45 foi excluído para utilizar o JWKS
#spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-pkey.pem
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-known/jwks.json

algafood.jwt.keystore.jks-location=classpath:keys/algafood.jks
algafood.jwt.keystore.password=123456
algafood.jwt.keystore.keypair-alias=algafood
